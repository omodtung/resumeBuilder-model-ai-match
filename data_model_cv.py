# -*- coding: utf-8 -*-
"""data-model-cv

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R9ObR3qQ603xPl-kwSxtIJUQinF9IOCd
"""

import string
import pandas as pd
import numpy as np
import re
import matplotlib.pyplot as plt
import seaborn as sns
import re

df =pd.read_csv('/content/sample_data/data-skill-train.csv')
df.head()

# @title id vs resume_source_id

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='id', y='resume_source_id', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

string.punctuation

def remove_pun(text):
    if isinstance(text, str):  # Check if the input is a string
        for pun in string.punctuation:
            text = text.replace(pun, " ")
        text = text.lower()
    return text

df['skills_text']=df['skills_text'].apply(remove_pun)

df['skills_text'] = df['skills_text'].fillna('')

df.head(20)

from sklearn.model_selection import train_test_split

X = df.iloc[:,7]
Y = df.iloc[:,5]

# Lấy tên cột dựa trên chỉ số
x_column_name = df.columns[7]
y_column_name = df.columns[5]

# Vẽ biểu đồ phân tán
df.plot(kind='scatter', x=x_column_name, y=y_column_name, s=12, alpha=.9)

# Ẩn các đường biên trên và phải
plt.gca().spines[['top', 'right',]].set_visible(False)

# Hiển thị biểu đồ
plt.show()

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)

X_train

from sklearn import feature_extraction

vec = feature_extraction.text.TfidfVectorizer(ngram_range=(1,2),analyzer='char')

from sklearn import pipeline
from sklearn import linear_model

model_pipe=pipeline.Pipeline([('vec',vec),('clf',linear_model.LogisticRegression())])

model_pipe.fit(X_train, Y_train)

predict_val =model_pipe.predict(X_test)

from sklearn import metrics

metrics.accuracy_score(Y_test,predict_val)*100

metrics.confusion_matrix(Y_test,predict_val)*100

model_pipe.predict(['React'])